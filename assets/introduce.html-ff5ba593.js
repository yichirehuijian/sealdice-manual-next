import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as r,a as e,d,b as o,w as n,e as a}from"./app-8df52869.js";const h={},p=e("h1",{id:"基础概念",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基础概念","aria-hidden":"true"},"#"),d(" 基础概念")],-1),_={class:"hint-container info"},u=e("p",{class:"hint-container-title"},"本节内容",-1),f=e("strong",null,"使用",-1),g=e("strong",null,"搭建和部署",-1),m=e("h2",{id:"什么是骰子",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是骰子","aria-hidden":"true"},"#"),d(" 什么是骰子？")],-1),v=e("p",null,[e("strong",null,"骰子"),d("这里特指在即时聊天软件（如 QQ、KOOK、Discord）中为 TRPG（跑团）玩家提供方便的机器人。顾名思义，骰子提供各种基于各种跑团规则（如 CoC、D&D）的骰点服务， 同时还包括技能检定、日志记录（Log）等功能。一些骰子服务，包括 SealDice，还提供一系列的自定义和娱乐功能。")],-1),x=e("h2",{id:"获取和使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#获取和使用","aria-hidden":"true"},"#"),d(" 获取和使用")],-1),b={href:"https://docs.qq.com/sheet/DV0F4RWdyellaRkZD?tab=BB08J2&scode=",target:"_blank",rel:"noopener noreferrer"},k=a('<p>一般而言，公骰是免费的。但他们的维护者（骰主）一般都要求用户严格遵循使用协议，使用前请使用 <code>.help 协议</code> 指令了解你需要注意哪些事项。</p><div class="hint-container danger"><p class="hint-container-title">QQ 骰子的使用注意项</p><p>QQ 并未提供公开的机器人接口，因此机器人只能使用第三方软件作为<strong>假用户</strong>接入。QQ 可能会检测到这些机器人，将它们视为诈骗而予以警告、封禁，甚至永久冻结。</p><p>因此，在 QQ 使用骰子有许多约定俗成的规则，例如必须使用指令使骰子退群，而<strong>严禁直接移出群聊</strong>。为了尊重骰主的劳动成果，你应该遵守这些规则。</p></div><p>在 QQ 上，你需要和骰子成为好友，然后拉入群组使用；在其他平台，一般使用邀请链接或者其他方式（详细操作请查看对应平台的相关使用文档）将机器人邀请进服务器、频道，或群组。之后，你可以通过触发 <strong>指令回复</strong> 和 <strong>自定义回复</strong> 来使用骰子机器人了。</p><h3 id="指令回复" tabindex="-1"><a class="header-anchor" href="#指令回复" aria-hidden="true">#</a> 指令回复</h3><p>指令是和骰子互动的基本方式。一个指令由指令前缀、指令名、指令参数、指令标志组成。</p><h4 id="指令前缀" tabindex="-1"><a class="header-anchor" href="#指令前缀" aria-hidden="true">#</a> 指令前缀</h4><p>为了避免意外触发，指令前面都带有前缀，如 <code>.help 协议</code> 中的 <code>.</code>。按照习惯，指令前缀一般是便于输入的中英文句号，通常是 <code>.</code> 和 <code>。</code> 。</p><p>海豹核心提供了自定义指令前缀功能，因此，其他符号如 <code>/</code>，甚至一段话 <code>哦，我的骰子，</code> 都可以被用作前缀。如果你使用公骰，请注意查阅它的使用说明。</p><h4 id="指令名" tabindex="-1"><a class="header-anchor" href="#指令名" aria-hidden="true">#</a> 指令名</h4><p>以 <code>.help 协议</code> 为例，其中的 <code>help</code> 就是指令名。指令可以有别名，例如 <code>查询</code> 就是 <code>find</code> 的别名。</p>',10),Q={class:"hint-container info"},D=e("p",{class:"hint-container-title"},"指令的行为与预期不符？",-1),y=e("p",null,"如果你发现指令的回复与预期不符合，有可能是没有开启正确的扩展，从而执行了来自其他扩展的指令。",-1),C=e("code",null,"rc",-1),q=e("code",null,"ext",-1),B=a(`<h4 id="指令参数" tabindex="-1"><a class="header-anchor" href="#指令参数" aria-hidden="true">#</a> 指令参数</h4><p>以 <code>.help 协议</code> 为例，其中 <code>协议</code> 就是指令参数，参数提供指令所需要的信息。</p><p>虽然海豹在一定程度上可以兼容 <code>.help协议</code> 这种情况，但是<strong>在指令名与参数、参数与参数之间添加空格</strong>能保证海豹骰识别指令时准确无误，避免出现预期外情况。</p><div class="hint-container tip"><p class="hint-container-title">获取指令帮助</p><p>多数情况下，第一个参数为 <code>help</code>，或者没有正确提供指令所需参数时会返回指令的帮助信息。例如，下面是 <code>find</code> 指令返回的帮助信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>查询指令，通常使用全文搜索（x86 版）或快速查询（arm, 移动版）
.find/查询 &lt;关键字&gt;      // 查找文档。关键字可以多个，用空格分割
.find#&lt;分组&gt; &lt;关键字&gt;    // 查找指定分组下的文档。关键字可以多个，用空格分割
.find &lt;数字 ID&gt;          // 显示该 ID 的词条
.find --rand           // 显示随机词条
.find &lt;关键字&gt; --num=10 // 需要更多结果
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依照惯例，帮助说明中的的一些符号有特定含义，说明如下：</p><ol><li><p><code>&lt;关键字&gt;</code> 的尖括号 <code>&lt;&gt;</code> 表示你应以相应内容替换此处内容。</p><p>正常的用例：<code>.find 火球术</code> 错误的用例：<code>.find &lt;火球术&gt;</code></p></li><li><p><code>[关键字]</code> 或 <code>(关键字)</code> 的括号 <code>[] ()</code> 表示此参数可以被省略。</p></li><li><p><code>(关键字1|关键字2)</code> 的圆括号 <code>()</code> 搭配竖线 <code>|</code> 表示在所列各项中选择一个。</p></li></ol></div><h4 id="指令标志" tabindex="-1"><a class="header-anchor" href="#指令标志" aria-hidden="true">#</a> 指令标志</h4><p>标志（flag）和参数相似，但不同于参数往往需要处于按照一定的顺序出现，标志可以无序排列。标志通过特定的关键字（key）来辅助识别，一般形式为 <code>--key=value</code> 或者 <code>--key</code> 。</p><div class="hint-container info"><p class="hint-container-title">注意</p><p>一些系统（如 iOS）会将两个连字符（hyphen）<code>--</code> 自动转换为短画线（en dash）<code>–</code>，输入 flag 时请注意辨别。</p></div><h3 id="自定义回复" tabindex="-1"><a class="header-anchor" href="#自定义回复" aria-hidden="true">#</a> 自定义回复</h3>`,8),L=e("p",null,"海豹核心没有预置的自定义回复，完全由骰主自行设定。因此每个骰子使用自定义回复的方法可能完全不同。",-1),R=e("p",null,"如果你使用公骰，请参阅相应的使用文档以了解骰主设定的自定义回复。",-1);function V(I,N){const t=c("RouterLink"),i=c("ExternalLinkIcon");return l(),r("div",null,[p,e("div",_,[u,e("p",null,[d("这里讲的是"),f,d("海豹核心的相关事项，如果要了解如何"),g,d("骰子，请参考 "),o(t,{to:"/deploy/quick-start.html"},{default:n(()=>[d("部署 - 快速开始")]),_:1}),d("。")]),e("p",null,[d("以下内容针对从未接触过骰子的用户准备。如果你已经有使用其他骰系的经验，可以 "),o(t,{to:"/use/quick-start.html"},{default:n(()=>[d("跳过本节")]),_:1}),d("。")])]),m,v,x,e("p",null,[d("最简单的方法就是自己 "),o(t,{to:"/deploy/quick-start.html"},{default:n(()=>[d("搭建")]),_:1}),d(" 一个海豹骰自用（私骰），也可以从 "),e("a",b,[d("SealDice 海豹骰公骰登记表"),o(i)]),d(" 中寻找一个面向公众提供服务的骰子（公骰）。")]),k,e("div",Q,[D,e("p",null,[d("海豹通过 "),o(t,{to:"/advanced/introduce.html"},{default:n(()=>[d("扩展")]),_:1}),d(" 来组织功能和指令，指令名只要求在同一扩展内不重复。")]),y,e("p",null,[d("例如，CoC 和 D&D 都存在掷骰检定指令 "),C,d("，你需要通过扩展管理指令 "),o(t,{to:"/use/core.html"},{default:n(()=>[q]),_:1}),d(" 来开启其中一个、关闭另一个，以控制指令的行为。")])]),B,e("p",null,[o(t,{to:"/use/deck_and_reply.html"},{default:n(()=>[d("自定义回复")]),_:1}),d(" 形式自由，触发机制多样（关键字、正则表达式等），并且能配合海豹核心独特的变量系统使用。")]),L,R])}const O=s(h,[["render",V],["__file","introduce.html.vue"]]);export{O as default};

import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as m,c as v,a as n,d as s,b as a,f as i,w as e,e as p}from"./app-8df52869.js";const b="/sealdice-manual-next/assets/js-config-example-717e902c.png",g={},h=n("h1",{id:"编写-javascript-插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编写-javascript-插件","aria-hidden":"true"},"#"),s(" 编写 JavaScript 插件")],-1),f={class:"hint-container info"},x=n("p",{class:"hint-container-title"},"本节内容",-1),y=n("p",null,"本节将介绍 JavaScript 脚本的编写，请善用侧边栏和搜索，按需阅读文档。",-1),w=n("p",null,"我们假定你熟悉 JavaScript / TypeScript，编程语言的教学超出了本文档的目的，如果你还不熟悉它们，可以从互联网上寻找到很多优秀的教程。如：",-1),q={href:"https://zh.javascript.info",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.liaoxuefeng.com/wiki/1022910821149312",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.runoob.com/js/js-tutorial.html",target:"_blank",rel:"noopener noreferrer"},j=n("h2",{id:"一些有帮助的资源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一些有帮助的资源","aria-hidden":"true"},"#"),s(" 一些有帮助的资源")],-1),A={href:"https://marketplace.visualstudio.com/items?itemName=yxChangingSelf.sealdice-snippets",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/sealdice/sealdice-js-ext-template",target:"_blank",rel:"noopener noreferrer"},T=n("a",{href:"#%E4%BD%BF%E7%94%A8-ts-%E6%A8%A1%E6%9D%BF"},"使用 TS 模板",-1),E=p(`<div class="hint-container tip"><p class="hint-container-title">使用 TypeScript</p><p>我们更推荐使用 TypeScript 来编写插件，编译到 ES6 后使用即可。不过先从 JavaScript 开始也是没有任何问题的。</p></div><h2 id="第一个-js-扩展" tabindex="-1"><a class="header-anchor" href="#第一个-js-扩展" aria-hidden="true">#</a> 第一个 JS 扩展</h2><p>我们从最简单的扩展开始，这个扩展只会在日志中打印一条 <code>Hello World!</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：如何开始</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  这是一个演示脚本，并没有任何实际作用。</span>
<span class="token comment">// @timestamp    1671368035</span>
<span class="token comment">// 2022-12-18</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),I={class:"hint-container note"},R=n("p",{class:"hint-container-title"},"海豹对 JavaScript 的支持",-1),N={href:"https://github.com/dop251/goja",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"async/await",-1),G=n("code",null,"promise",-1),B=n("code",null,"generator",-1),M=n("p",null,[s("需要注意引擎的整型为 32 位，请小心溢出问题。同时 "),n("code",null,"setTimeout"),s(" 和 "),n("code",null,"setInterval"),s(" 返回的句柄为一个空对象，而非数字类型。")],-1),X=p(`<div class="hint-container tip"><p class="hint-container-title">打印日志</p><p>console 打印出来的东西不仅会在控制台中出现，在日志中也会显示。</p><p>涉及网络请求或延迟执行的内容，有时候不会在控制台调试面板上显示出来，而在日志中能看到。</p></div><h2 id="填写插件信息" tabindex="-1"><a class="header-anchor" href="#填写插件信息" aria-hidden="true">#</a> 填写插件信息</h2><p>每个 JS 扩展需要在开头以固定格式注释的形式留下信息，以便使用和分享：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         脚本的名字</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  这是一个演示脚本，并没有任何实际作用。</span>
<span class="token comment">// @timestamp    1672066028</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),P=n("thead",null,[n("tr",null,[n("th",null,"属性"),n("th",null,"含义")])],-1),D=n("tr",null,[n("td",null,"@name"),n("td",null,"JS 扩展的名称，会展示在插件列表页面")],-1),U=n("tr",null,[n("td",null,"@author"),n("td",null,"作者名")],-1),O=n("td",null,"@version",-1),J={href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"},L=n("tr",null,[n("td",null,"@description"),n("td",null,"对扩展的功能的描述")],-1),V=n("tr",null,[n("td",null,"@timestamp"),n("td",null,[s("最后更新时间，以秒为单位的 unix 时间戳，新版本支持了直接使用时间字符串，如 "),n("code",null,"2023-10-30"),s("。")])],-1),H=n("tr",null,[n("td",null,"@license"),n("td",null,"开源协议，示例中的 Apache-2 是一个比较自由的协议，允许任意使用和分发（包括商用），当然你也可以使用其它协议（MIT GPL 等）")],-1),z=n("tr",null,[n("td",null,"@homepageURL"),n("td",null,"你的扩展的主页链接，有 GitHub 仓库可以填仓库链接，没有则可以填海豹官方插件仓库")],-1),F=n("h2",{id:"创建和注册扩展",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建和注册扩展","aria-hidden":"true"},"#"),s(" 创建和注册扩展")],-1),K={class:"hint-container tip"},Y=n("p",{class:"hint-container-title"},"扩展机制",-1),W=n("p",null,"扩展机制可以看做是海豹的 mod 管理机制，可以模块化开关海豹的任意一部分，如常用的开启 dnd 扩展，关闭 coc 扩展，关闭自动回复等。",-1),Q=p(`<p>在海豹中，<strong>所有指令必须归属于某个扩展</strong>，而一个扩展可以包含多条指令。</p><p>JS 脚本中创建扩展的方式如下，在创建扩展后，<strong>还需要注册扩展</strong>，才能让扩展起效，不要漏掉哦！</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 如何建立一个扩展</span>

<span class="token comment">// 首先检查是否已经存在</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 不存在，那么建立扩展，名为 test，作者“木落”，版本 1.0.0</span>
  <span class="token keyword">const</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;木落&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 注册扩展</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">JS 脚本和扩展</p><p>在实现上，海豹允许你在一个 JS 脚本文件中注册多个扩展，但我们不建议这样做。一般来说，一个 JS 脚本文件只会注册一个扩展。</p></div><div class="hint-container warning"><p class="hint-container-title">修改内置功能？</p><p>出于对公平性的考虑，JS 脚本不能替换内置指令和内置扩展。</p></div>`,5),Z=p(`<h2 id="自定义指令" tabindex="-1"><a class="header-anchor" href="#自定义指令" aria-hidden="true">#</a> 自定义指令</h2><p>想要创建一条自定义指令，首先需要创建一个扩展（<code>seal.ExtInfo</code>），写好自定义指令的实现逻辑之后，再注册到扩展中。</p><h3 id="创建指令" tabindex="-1"><a class="header-anchor" href="#创建指令" aria-hidden="true">#</a> 创建指令</h3><p>接上面的代码，假定目前已经注册好了一个名为 <code>test</code> 的扩展，现在要写一个名为 <code>seal</code> 的指令：</p><ul><li>这个命令的功能为，显示「抓到一只海豹」的文案； <ul><li>如果命令写 <code>.seal ABC</code>，那么文案中将海豹命名为「ABC」；</li><li>如果命令中没写名字，那么命名为默认值「氪豹」。</li></ul></li></ul><p>第一步，创建新的自定义指令，设置好名字和帮助信息。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cmdSeal <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cmdSeal<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;seal&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 指令名字，可用中文</span>
cmdSeal<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;召唤一只海豹，可用 .seal &lt;名字&gt; 命名&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">命令的帮助信息</p><p>命令的帮助信息是在使用 <code>.help &lt;命令&gt;</code> 时会返回的帮助内容。</p><p>帮助信息<strong>不要</strong>以 <code>.</code> 开头，防止查看帮助时骰子的回复触发其他骰子。</p></div><p>第二步，编写指令的具体处理代码。</p><p>你需要编写指令对象的 <code>solve</code> 函数，在使用该指令的时候，海豹核心会调用你写的这个函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cmdSeal<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里是你需要编写的内容</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>ctx</code></td><td>主要是和当前环境以及用户相关的内容，如当前发指令用户，当前群组信息等</td></tr><tr><td><code>msg</code></td><td>原始指令内容，如指令文本，发送平台，发送时间等</td></tr><tr><td><code>cmdArgs</code></td><td>指令信息，会将用户发的信息进行分段，方便快速取用</td></tr></tbody></table>`,12),nn={href:"https://github.com/sealdice/javascript/tree/main/examples_ts",target:"_blank",rel:"noopener noreferrer"},sn=n("code",null,"examp_ts",-1),an=n("code",null,"seal.d.ts",-1),tn=p(`<h3 id="指令参数与返回值" tabindex="-1"><a class="header-anchor" href="#指令参数与返回值" aria-hidden="true">#</a> 指令参数与返回值</h3><p>假设用户发送过来的消息是 <code>.seal A B C</code>，那么可以用 <code>cmdArgs.getArgN(1)</code> 获取到 <code>A</code>，<code>cmdArgs.getArgN(2)</code> 获取到 <code>B</code>，<code>cmdArgs.getArgN(3)</code> 获取到 <code>C</code>。</p><p>通常会对参数值进行判断，随后作出响应。</p><p>以下代码处理的是 <code>.seal help</code> 的情形：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cmdSeal<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取第一个参数，例如 .seal A B C</span>
  <span class="token comment">// 这里 cmdArgs.getArgN(1) 的结果即是 A，传参为 2 的话结果是 B</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .seal help</span>
      <span class="token comment">// 创建一个结果对象，并将 showHelp 标记为 true，这会自动给用户发送帮助</span>
      <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 没有传入参数时的代码</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">返回执行结果</p><p>在执行完自己的代码之后，需要返回指令结果对象，其参数是是否执行成功。</p></div><h3 id="指令核心执行流程" tabindex="-1"><a class="header-anchor" href="#指令核心执行流程" aria-hidden="true">#</a> 指令核心执行流程</h3><p>给消息发送者回应，需要使用 <code>seal.replyToSender()</code> 函数，前两个参数和 <code>solve()</code> 函数接收的参数一致，第三个参数是你要发送的文本。</p>`,8),pn=n("code",null,"{$t玩家}",-1),en={href:"https://docs.go-cqhttp.org/cqcode",target:"_blank",rel:"noopener noreferrer"},on=p(`<p>在这个例子中，我们需要获取作为海豹名字的参数，获取不到就使用默认值，随后向消息发送者发送回应。</p><p>在刚刚的位置填入核心代码，就可以完成了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cmdSeal<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取第一个参数，例如 .seal A B C</span>
  <span class="token comment">// 这里 cmdArgs.getArgN(1) 的结果即是 A，传参为 2 的话结果是 B</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .seal help</span>
      <span class="token comment">// 创建一个结果对象，并将 showHelp 标记为 true，这会自动给用户发送帮助</span>
      <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .seal XXXX，取第一个参数为名字</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> val <span class="token operator">=</span> <span class="token string">&#39;氪豹&#39;</span><span class="token punctuation">;</span>
      <span class="token comment">// 进行回复，如果是群聊发送那么在群里回复，私聊发送则在私聊回复 (听起来是废话文学，但详细区别见暗骰例子)</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你抓到一只海豹！取名为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n它的逃跑意愿为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册指令" tabindex="-1"><a class="header-anchor" href="#注册指令" aria-hidden="true">#</a> 注册指令</h3><p>第三步，将命令注册到扩展中。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;seal&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你想要给这个命令起一个别名，也就是增加一个触发词，可以这样写：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;seal&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span> <span class="token comment">// 注册 .seal 指令</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;海豹&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span> <span class="token comment">// 注册 .海豹 指令，等效于 .seal</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>完整的代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：编写一条自定义指令</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  召唤一只海豹，可用.seal &lt;名字&gt; 命名</span>
<span class="token comment">// @timestamp    1671368035</span>
<span class="token comment">// 2022-12-18</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token comment">// 编写一条自定义指令</span>
<span class="token comment">// 先将扩展模块创建出来，如果已创建就直接使用</span>
<span class="token keyword">let</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;木落&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 创建指令 .seal</span>
<span class="token comment">// 这个命令的功能为，显示「抓到一只海豹」的文案；</span>
<span class="token comment">// 如果命令写 .seal ABC，那么文案中将海豹命名为「ABC」；</span>
<span class="token comment">// 如果命令中没写名字，那么命名为默认值「氪豹」。</span>
<span class="token keyword">const</span> cmdSeal <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cmdSeal<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;seal&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 指令名字，可用中文</span>
cmdSeal<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;召唤一只海豹，可用 .seal &lt;名字&gt; 命名&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 主函数，指令解析器会将指令信息解析，并储存在几个参数中</span>
<span class="token comment">// ctx 主要是和当前环境以及用户相关的内容，如当前发指令用户，当前群组信息等</span>
<span class="token comment">// msg 为原生态的指令内容，如指令文本，发送平台，发送时间等</span>
<span class="token comment">// cmdArgs 为指令信息，会将用户发的信息进行分段，方便快速取用</span>
cmdSeal<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取第一个参数，例如 .seal A B C</span>
  <span class="token comment">// 这里 cmdArgs.getArgN(1) 的结果即是 A，传参为 2 的话结果是 B</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .seal help</span>
      <span class="token comment">// 创建一个结果对象，并将 showHelp 标记为 true，这会自动给用户发送帮助</span>
      <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .seal XXXX，取第一个参数为名字</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> val <span class="token operator">=</span> <span class="token string">&#39;氪豹&#39;</span><span class="token punctuation">;</span>
      <span class="token comment">// 进行回复，如果是群聊发送那么在群里回复，私聊发送则在私聊回复 (听起来是废话文学，但详细区别见暗骰例子)</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你抓到一只海豹！取名为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n它的逃跑意愿为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 将命令注册到扩展中</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;seal&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span>

<span class="token comment">// 无实际意义，用于消除编译报错</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是最基本的模板了。</p><h2 id="生成随机数" tabindex="-1"><a class="header-anchor" href="#生成随机数" aria-hidden="true">#</a> 生成随机数</h2><p>可以使用以下函数生成随机整数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 生成随机整数
 * <span class="token keyword">@param</span> <span class="token parameter">min</span> 最小值
 * <span class="token keyword">@param</span> <span class="token parameter">max</span> 最大值
 * <span class="token keyword">@returns</span> 位于 [min,max] 区间的随机整数
 */</span>
<span class="token keyword">function</span> <span class="token function">randomInt</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="抽取牌堆" tabindex="-1"><a class="header-anchor" href="#抽取牌堆" aria-hidden="true">#</a> 抽取牌堆</h2><p>抽取牌堆的函数是 <code>seal.deck.draw(ctx, deckName, shufflePool)</code></p><ul><li><code>ctx</code>：<code>MsgContext</code> 类型，指令上下文，<code>solve()</code> 函数传进来的第一个参数</li><li><code>deckName</code>：牌堆名称，字符串类型，例如 <code>GRE单词</code></li><li><code>shufflePool</code>：是否放回抽取，布尔类型，<code>true</code> 为放回抽取，<code>false</code> 为不放回抽取</li></ul><p>返回值是一个 <code>map</code>，包含以下字段：</p><ul><li><code>exists</code>：布尔类型，是否抽取成功</li><li><code>result</code>：字符串类型，抽取结果</li><li><code>err</code>：字符串类型，抽取失败的原因</li></ul><h3 id="示例代码-抽取牌堆" tabindex="-1"><a class="header-anchor" href="#示例代码-抽取牌堆" aria-hidden="true">#</a> 示例代码：抽取牌堆</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         抽取牌堆示例</span>
<span class="token comment">// @author       SzzRain</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  用于演示如何抽取牌堆</span>
<span class="token comment">// @timestamp    1699077659</span>
<span class="token comment">// @license      MIT</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token comment">// 本脚本用于演示如何抽取牌堆, 共有两种实现方式</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;draw-decks-example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;draw-decks-example&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SzzRain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 创建一个命令</span>
  <span class="token keyword">const</span> cmdDrawDecks <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cmdDrawDecks<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;dr&#39;</span><span class="token punctuation">;</span>
  cmdDrawDecks<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用 .dr &lt;牌堆名&gt; 来抽取牌堆&#39;</span><span class="token punctuation">;</span>
  cmdDrawDecks<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 抽取牌堆</span>
    <span class="token comment">// 参数1：ctx 参数2：牌堆名称 参数3：是否放回抽取</span>
    <span class="token comment">// 返回值：{exists: true, result: &#39;抽取结果&#39;, err: &#39;错误原因&#39;}</span>
    <span class="token keyword">const</span> decks <span class="token operator">=</span> seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 判断是否抽取成功</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>decks<span class="token punctuation">[</span><span class="token string">&#39;exists&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> decks<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&#39;抽取牌堆失败，原因：&#39;</span> <span class="token operator">+</span> decks<span class="token punctuation">[</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// 注册命令</span>
  ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;dr&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdDrawDecks<span class="token punctuation">;</span>

  <span class="token comment">// 创建一个命令</span>
  <span class="token keyword">const</span> cmdDrawDecks2 <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cmdDrawDecks2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;dr2&#39;</span><span class="token punctuation">;</span>
  cmdDrawDecks2<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用 .dr2 &lt;牌堆名&gt; 来抽取牌堆&#39;</span><span class="token punctuation">;</span>
  cmdDrawDecks2<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 抽取牌堆的另一种写法，使用 format 函数，由于经过了 rollvm 的处理，所以代码的执行效率会更慢</span>
    <span class="token comment">// 不过这种写法的返回值固定为字符串，省去了判断是否抽取成功的步骤</span>
    <span class="token comment">// 参数1：ctx 参数2：海豹语表达式，其中 #{DRAW-牌堆名称} 会被替换为抽取结果</span>
    <span class="token keyword">const</span> decks <span class="token operator">=</span> seal<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">#{DRAW-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> decks<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 注册命令</span>
  ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;dr2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdDrawDecks2<span class="token punctuation">;</span>

  <span class="token comment">// 注册扩展</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="权限识别" tabindex="-1"><a class="header-anchor" href="#权限识别" aria-hidden="true">#</a> 权限识别</h2><p>海豹中的权限等级，由高到低分别是：<strong>骰主</strong>，<strong>群主</strong>，<strong>管理员</strong>，<strong>邀请者</strong>，<strong>普通用户</strong> 和 <strong>黑名单用户</strong>。 每一个身份都有一个对应的数字，可以通过 <code>ctx.privilegeLevel</code> 获取当前用户的权限等级。 每个身份所对应的数字如下表所示：</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>注意：</strong> 部分权限等级仅在群聊中有效，私聊中除了 <strong>骰主</strong> 和 <strong>黑名单用户</strong> 以外的权限等级都为 0。</p></div><table><thead><tr><th>身份</th><th>权限值</th></tr></thead><tbody><tr><td>骰主</td><td>100</td></tr><tr><td>群主</td><td>60</td></tr><tr><td>管理员</td><td>50</td></tr><tr><td>邀请者</td><td>40</td></tr><tr><td>普通用户</td><td>0</td></tr><tr><td>黑名单用户</td><td>-30</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">关于黑名单用户</p><p>通常情况下你不需要考虑黑名单用户的情况，因为黑名单用户的消息会被过滤掉，不会触发任何指令。</p></div><h3 id="示例代码-权限识别" tabindex="-1"><a class="header-anchor" href="#示例代码-权限识别" aria-hidden="true">#</a> 示例代码：权限识别</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         权限识别样例</span>
<span class="token comment">// @author       SzzRain</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  使用命令 .myperm 查看自己的权限</span>
<span class="token comment">// @timestamp    1699086084</span>
<span class="token comment">// @license      MIT</span>
<span class="token comment">// @homepageURL  https://github.com/Szzrain</span>
<span class="token comment">// ==/UserScript==</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;myperm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;myperm&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SzzRain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 创建一个命令</span>
  <span class="token keyword">const</span> cmdMyperm <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cmdMyperm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;myperm&#39;</span><span class="token punctuation">;</span>
  cmdMyperm<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用 .myperm 展示我的权限&#39;</span><span class="token punctuation">;</span>
  cmdMyperm<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token string">&quot;普通用户&quot;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">100</span><span class="token operator">:</span>
        text <span class="token operator">=</span> <span class="token string">&quot;master&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">60</span><span class="token operator">:</span>
        text <span class="token operator">=</span> <span class="token string">&quot;owner&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">50</span><span class="token operator">:</span>
        text <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">40</span><span class="token operator">:</span>
        text <span class="token operator">=</span> <span class="token string">&quot;inviter&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">30</span><span class="token operator">:</span>
        <span class="token comment">// 黑名单用户，但是由于黑名单会被过滤掉，所以实际上这里并不会执行，这里只是为了演示</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 注册命令</span>
  ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;myperm&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdMyperm<span class="token punctuation">;</span>

  <span class="token comment">// 注册扩展</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),cn={id:"黑名单-信任名单操作",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#黑名单-信任名单操作","aria-hidden":"true"},"#",-1),un=p(`<h3 id="黑名单操作的函数" tabindex="-1"><a class="header-anchor" href="#黑名单操作的函数" aria-hidden="true">#</a> 黑名单操作的函数</h3><p>添加：<code>seal.ban.addBan(ctx, uid, place, reason)</code></p><p>移除：<code>seal.ban.remove(ctx, uid)</code></p><ul><li><code>ctx</code>：<code>MsgContext</code> 类型，指令上下文，<code>solve()</code> 函数传进来的第一个参数</li><li><code>uid</code>：用户 ID，字符串类型，例如 <code>QQ:123456789</code>, <code>TG:123456789</code></li><li><code>place</code>：拉黑的地方，字符串类型，随便写，一般来说在群内拉黑就写群 ID</li><li><code>reason</code>：拉黑原因，字符串类型，随便写</li></ul><h3 id="信任用户名单" tabindex="-1"><a class="header-anchor" href="#信任用户名单" aria-hidden="true">#</a> 信任用户名单</h3><p>添加：<code>seal.ban.addTrust(ctx, uid, place, reason)</code> 参数说明同上</p><p>移除：<code>seal.ban.remove(ctx, uid)</code></p><div class="hint-container tip"><p class="hint-container-title">相同的移除函数</p><p>黑名单和信任名单存储在同一个数据库中，因此移除时使用的是同一个函数。</p><p>你在进行移除操作时需要自己判断是否符合你的预期。</p></div><h3 id="获取黑名单-信任名单列表" tabindex="-1"><a class="header-anchor" href="#获取黑名单-信任名单列表" aria-hidden="true">#</a> 获取黑名单 / 信任名单列表</h3><p>使用 <code>seal.ban.getList()</code></p><p>返回值为一个数组，数组中的每一项都是一个 <code>BanListInfoItem</code> 对象，包含以下字段：</p><ul><li><code>id</code>：用户 ID，字符串类型</li><li><code>name</code>：用户昵称，字符串类型</li><li><code>score</code>：怒气值，整数类型</li><li><code>rank</code>：拉黑/信任等级 0 没事 -10警告 -30禁止 30信任</li><li><code>times</code>：事发时间，数组类型，内部元素为整数时间戳</li><li><code>reasons</code>：拉黑/信任原因，数组类型，内部元素为字符串</li><li><code>places</code>：拉黑/信任的发生地点，数组类型，内部元素为字符串</li><li><code>banTime</code>：拉黑/信任的时间，整数时间戳</li></ul><h3 id="获取用户在黑名单-信任名单中的信息" tabindex="-1"><a class="header-anchor" href="#获取用户在黑名单-信任名单中的信息" aria-hidden="true">#</a> 获取用户在黑名单 / 信任名单中的信息</h3><p>使用 <code>seal.ban.getUser(uid)</code></p><p>如果用户没有在黑名单 / 信任名单中，返回值为空值。</p><p>如果有则返回一个 <code>BanListInfoItem</code> 对象，字段同上。</p><h3 id="示例代码-黑名单-信任名单操作" tabindex="-1"><a class="header-anchor" href="#示例代码-黑名单-信任名单操作" aria-hidden="true">#</a> 示例代码：黑名单 / 信任名单操作</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         js-ban</span>
<span class="token comment">// @author       SzzRain</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  演示 js 扩展操作黑名单</span>
<span class="token comment">// @timestamp    1706684850</span>
<span class="token comment">// @license      MIT</span>
<span class="token comment">// @homepageURL  https://github.com/Szzrain</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;js-ban&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;js-ban&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SzzRain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdcban <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdcban<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;cban&#39;</span><span class="token punctuation">;</span>
    cmdcban<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.cban &lt;用户id&gt; 来拉黑目标用户，仅master可用&#39;</span><span class="token punctuation">;</span>
    cmdcban<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span>ban<span class="token punctuation">.</span><span class="token function">addBan</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> val<span class="token punctuation">,</span> <span class="token string">&quot;JS扩展拉黑&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JS扩展拉黑测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;已拉黑用户&quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;cban&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdcban<span class="token punctuation">;</span>

    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdcunban <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdcunban<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;cunban&#39;</span><span class="token punctuation">;</span>
    cmdcunban<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.cunban &lt;用户id&gt; 来解除拉黑/移除信任目标用户，仅master可用&#39;</span><span class="token punctuation">;</span>
    cmdcunban<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 信任用户和拉黑用户存在同一个列表中，remove 前请先判断是否符合预期</span>
                    seal<span class="token punctuation">.</span>ban<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;已解除拉黑/信任用户&quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;cunban&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdcunban<span class="token punctuation">;</span>

    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdctrust <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdctrust<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;ctrust&#39;</span><span class="token punctuation">;</span>
    cmdctrust<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.ctrust &lt;用户id&gt; 来信任目标用户，仅master可用&#39;</span><span class="token punctuation">;</span>
    cmdctrust<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span>ban<span class="token punctuation">.</span><span class="token function">addTrust</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> val<span class="token punctuation">,</span> <span class="token string">&quot;JS扩展信任&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JS扩展信任测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;已信任用户&quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;ctrust&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdctrust<span class="token punctuation">;</span>

    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdcbanlist <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdcbanlist<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;cbanlist&#39;</span><span class="token punctuation">;</span>
    cmdcbanlist<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.cbanlist 来查看黑名单和信任列表，仅master可用&#39;</span><span class="token punctuation">;</span>
    cmdcbanlist<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token string">&quot;黑名单/信任列表：\\n&quot;</span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span>ban<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        text <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) 当前等级:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token punctuation">.</span>rank<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 怒气值:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token punctuation">.</span>score<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;cbanlist&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdcbanlist<span class="token punctuation">;</span>

    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdcget <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdcget<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;cget&#39;</span><span class="token punctuation">;</span>
    cmdcget<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.cget &lt;用户id&gt; 来查看目标用户的黑名单/信任信息，仅master可用&#39;</span><span class="token punctuation">;</span>
    cmdcget<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> info <span class="token operator">=</span> seal<span class="token punctuation">.</span>ban<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;用户不存在或未被拉黑/信任&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">let</span> level <span class="token operator">=</span> info<span class="token punctuation">.</span>rank<span class="token punctuation">;</span>
                    <span class="token comment">// 不知道为什么，用 === 是 false</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>rank <span class="token operator">==</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        level <span class="token operator">=</span> <span class="token string">&quot;信任&quot;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>rank <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        level <span class="token operator">=</span> <span class="token string">&quot;拉黑&quot;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>rank <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        level <span class="token operator">=</span> <span class="token string">&quot;警告&quot;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">用户</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) 当前等级:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>level<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 怒气值:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>score<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;cget&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdcget<span class="token punctuation">;</span>

    <span class="token comment">// 注册扩展</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="存取数据" tabindex="-1"><a class="header-anchor" href="#存取数据" aria-hidden="true">#</a> 存取数据</h2><p>相关的 API 是两个函数，<code>ExtInfo.storageSet(key, value)</code> 函数和 <code>ExtInfo.storageGet(key)</code>，一个存，一个取。</p><p><strong>关于 key：</strong></p><p>存储时需要指定 key，你可以设定为你的扩展的名字，也可以设定为其他的，注意不要和别的扩展的 key 重名就可以了。</p><p>就好比你在商场门口想要把随身物品存进暂存柜中，需要先找到个和别人不重复的柜子，避免放错地方或者取错东西。</p><p><strong>关于 value：</strong></p><p>存放的数据是字符串类型，且只能存一个，但如果想要存放更多的数据以及非字符串类型的数据怎么办？</p>`,25),kn=n("code",null,"JSON.stringify()",-1),rn={href:"https://www.runoob.com/json/json-tutorial.html",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"JSON.parse()",-1),mn=p(`<h3 id="示例代码-投喂插件" tabindex="-1"><a class="header-anchor" href="#示例代码-投喂插件" aria-hidden="true">#</a> 示例代码：投喂插件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：存储数据</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  投喂，格式 .投喂 &lt;物品&gt;</span>
<span class="token comment">// @timestamp    1672423909</span>
<span class="token comment">// 2022-12-31</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token comment">// 先将扩展模块创建出来，如果已创建就直接使用</span>
<span class="token keyword">let</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;木落&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cmdFeed <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cmdFeed<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;投喂&#39;</span><span class="token punctuation">;</span>
cmdFeed<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;投喂，格式：.投喂 &lt;物品&gt;\\n.投喂 记录 // 查看记录&#39;</span><span class="token punctuation">;</span>
cmdFeed<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// .投喂 help</span>
      <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token string">&#39;列表&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;记录&#39;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&#39;list&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token string">&#39;feedInfo&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lst<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">- </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: 数量 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">投喂记录:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lst<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token string">&#39;feedInfo&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> val <span class="token operator">||</span> <span class="token string">&#39;空气&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      data<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token string">&#39;feedInfo&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你给海豹投喂了</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">，要爱护动物！</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 将命令注册到扩展中</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;投喂&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdFeed<span class="token punctuation">;</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;feed&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdFeed<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例代码-群内安价收集" tabindex="-1"><a class="header-anchor" href="#示例代码-群内安价收集" aria-hidden="true">#</a> 示例代码：群内安价收集</h3><p>这是关于数据的增加、删除、查询等操作的实现示例（修改的话就是删除之后增加）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         群内安价收集</span>
<span class="token comment">// @author       憧憬少</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  在群内收集群友给出的安价选项，并掷骰得出结果</span>
<span class="token comment">// @timestamp    1676386517</span>
<span class="token comment">// 2023-02-14 22:55:17</span>
<span class="token comment">// @license      MIT</span>
<span class="token comment">// @homepageURL  https://github.com/ChangingSelf/sealdice-js-ext-anchor</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// src/index.ts</span>
  <span class="token keyword">const</span> <span class="token constant">HELP</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">群内安价收集 (ak 是アンカー罗马字缩写)
注意 ak 后面有空格，“.ak”也可以换成“.安价”

.ak help // 查看帮助
.ak # 标题 // 新建一轮分歧并设标题
.ak + 选项 // 需要添加的选项的内容
.ak - 序号 // 需要移除的选项的序号
.ak ? // 列出目前所有选项
.ak = // 随机抽取 1 个选项并继续
.ak = n // 随机抽取 n 个选项并继续
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">STORAGE_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;anchor&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">OPTION_NUM_PER_PAGE</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span> <span class="token comment">// 列出所有选项时，每页放多少个选项</span>
  <span class="token keyword">function</span> <span class="token function">akNew</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> title</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;title&quot;</span><span class="token operator">:</span> title<span class="token punctuation">,</span>
      <span class="token string-property property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">已新建分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">akAdd</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{&quot;title&quot;:&quot;&quot;,&quot;options&quot;:[]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
已添加第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">个选项:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>option<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">akDel</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{&quot;title&quot;:&quot;&quot;,&quot;options&quot;:[]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> removed <span class="token operator">=</span> data<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
已移除第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">个选项:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>removed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">akList</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{&quot;title&quot;:&quot;&quot;,&quot;options&quot;:[]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
还没有任何选项呢</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> optStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> curPageRows <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      optStr <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token operator">++</span>curPageRows<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>curPageRows <span class="token operator">&gt;=</span> <span class="token constant">OPTION_NUM_PER_PAGE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>optStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        curPageRows <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curPageRows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>optStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">randomInt</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">akGet</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> num <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{&quot;title&quot;:&quot;&quot;,&quot;options&quot;:[]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
还没有任何选项呢</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">akList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> optStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">randomInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> data<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>r <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      optStr <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">结果是:
</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>optStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;anchor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;anchor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;憧憬少&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> cmdSeal <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdSeal<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;安价&quot;</span><span class="token punctuation">;</span>
    cmdSeal<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token constant">HELP</span><span class="token punctuation">;</span>
    cmdSeal<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&quot;#&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> title <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">akNew</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&quot;+&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> option <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">akAdd</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&quot;-&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">akDel</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&quot;?&quot;</span><span class="token operator">:</span>
          <span class="token keyword">case</span> <span class="token string">&quot;？&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function">akList</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&quot;=&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cmdArgs<span class="token punctuation">.</span>args<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              num <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">akGet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&quot;help&quot;</span><span class="token operator">:</span>
          <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> error<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&quot;安价&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&quot;ak&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdSeal<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据处理模板" tabindex="-1"><a class="header-anchor" href="#数据处理模板" aria-hidden="true">#</a> 数据处理模板</h2><p>关于取出数据来修改的函数，可以参考如下代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">STORAGE_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;anchor&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 将你的 key 抽出来单独作为一个常量，方便开发阶段修改（使用了之后就不要修改了）</span>
<span class="token comment">//函数：添加选项</span>
<span class="token keyword">function</span> <span class="token function">akAdd</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//取出数据</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ext<span class="token punctuation">.</span><span class="token function">storageGet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{&quot;title&quot;:&quot;&quot;,&quot;options&quot;:[]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//处理数据</span>
    data<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//响应发送者</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前分歧:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n已添加第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">个选项:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>option<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//将处理完的数据写回去</span>
    ext<span class="token punctuation">.</span><span class="token function">storageSet</span><span class="token punctuation">(</span><span class="token constant">STORAGE_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取玩家或群组数据" tabindex="-1"><a class="header-anchor" href="#读取玩家或群组数据" aria-hidden="true">#</a> 读取玩家或群组数据</h2><p>可以查看下文的 <a href="#js-%E6%89%A9%E5%B1%95-api">API</a>。</p><h2 id="编写暗骰指令" tabindex="-1"><a class="header-anchor" href="#编写暗骰指令" aria-hidden="true">#</a> 编写暗骰指令</h2><p>如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：编写暗骰指令</span>
<span class="token comment">// @author       流溪</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  暗骰，格式.hide 原因</span>
<span class="token comment">// @timestamp    1671540835</span>
<span class="token comment">// 2022-12-20</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>
ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ext<span class="token punctuation">)</span><span class="token punctuation">{</span>
    ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;流溪&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cmdHide <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>newCmdItemInfo<span class="token punctuation">;</span>
cmdHide<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;hide&#39;</span><span class="token punctuation">;</span>
cmdHide<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;暗骰，使用 .hide 面数 暗骰&#39;</span><span class="token punctuation">;</span>
cmdHide<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>messageType <span class="token operator">!==</span> <span class="token string">&#39;group&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&#39;暗骰只能在群内触发&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">rd</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 这里写的时候有点不清醒了，感觉是对的，如果不对请拷打我</span>
        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token string">&#39;help&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>showhelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 我知道这里有更好的判断是否为数字的方法但是我不会.jpg</span>
        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">骰子面数应是数字</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 这就是暗骰 api 哒！</span>
        seal<span class="token punctuation">.</span><span class="token function">replyPerson</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你在群</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token punctuation">.</span>groupId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">的掷骰结果为：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">rd</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdHide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到使用<code>seal.replyPerson</code>做到暗骰的效果。</p><h2 id="编写代骰指令" tabindex="-1"><a class="header-anchor" href="#编写代骰指令" aria-hidden="true">#</a> 编写代骰指令</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：编写代骰指令</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  捕捉某人，格式.catch &lt;@名字&gt;</span>
<span class="token comment">// @timestamp    1671540835</span>
<span class="token comment">// 2022-12-20</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token comment">// 编写代骰指令</span>
<span class="token comment">// 先将扩展模块创建出来，如果已创建就直接使用</span>
<span class="token keyword">let</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;木落&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 创建指令 .catch</span>
<span class="token comment">// 这个命令的功能为，显示“试图捕捉某人”，并给出成功率</span>
<span class="token comment">// 如果命令写“.catch @张三”，那么就会试着捕捉张三</span>
<span class="token keyword">const</span> cmdCatch <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cmdCatch<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;catch&#39;</span><span class="token punctuation">;</span>
cmdCatch<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;捕捉某人，格式.catch &lt;@名字&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 对这个指令启用使用代骰功能，即@某人时，可获取对方的数据，以对方身份进行骰点</span>
cmdCatch<span class="token punctuation">.</span>allowDelegate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
cmdCatch<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取对方数据，之后用 mctx 替代 ctx，mctx 下读出的数据即被代骰者的个人数据</span>
  <span class="token keyword">const</span> mctx <span class="token operator">=</span> seal<span class="token punctuation">.</span><span class="token function">getCtxProxyFirst</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 命令为 .catch help</span>
      <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">正在试图捕捉</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">，成功率为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>mctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 将命令注册到扩展中</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;catch&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdCatch<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络请求" tabindex="-1"><a class="header-anchor" href="#网络请求" aria-hidden="true">#</a> 网络请求</h2>`,17),vn={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},bn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 你可以使用 async/await 和 generator 来重写这段代码，欢迎 pr</span>
<span class="token comment">// 访问网址</span>
<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api-music.imsyy.top/cloudsearch?keywords=稻香&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在返回对象的基础上，将文本流作为 json 解析</span>
  resp<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 打印解析出的数据</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>套用这个模板，你可以写出很多调用 API 的简单扩展。</p>`,2),gn={href:"https://github.com/sealdice/javascript/blob/main/scripts/%E5%A8%B1%E4%B9%90%E5%90%91/%E9%9A%8F%E6%9C%BA%E7%8C%AB%E7%8C%AB%E5%9B%BE%E7%89%87.js",target:"_blank",rel:"noopener noreferrer"},hn=p('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[CQ:image,file=https://thiscatdoesnotexist.com/,cache=0]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>核心代码同样只有一行的「随机二次元图片」扩展：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[CQ:image,file=https://api.oick.cn/random/api.php?type=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,cache=0]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',3),fn={href:"https://github.com/sealdice/javascript/blob/main/scripts/%E5%A8%B1%E4%B9%90%E5%90%91/dicemaid-ai.js",target:"_blank",rel:"noopener noreferrer"},xn=p(`<p>它的核心代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">BID</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 填入你的骰娘的大脑的 id</span>
<span class="token keyword">const</span> <span class="token constant">KEY</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 填入你的 key</span>
<span class="token doc-comment comment">/**
 * 给 AI 主脑发送消息并接收回复
 * <span class="token keyword">@param</span> <span class="token parameter">ctx</span> 主要是和当前环境以及用户相关的内容，如当前发指令用户，当前群组信息等
 * <span class="token keyword">@param</span> <span class="token parameter">msg</span> 为原生态的指令内容，如指令文本，发送平台，发送时间等
 * <span class="token keyword">@param</span> <span class="token parameter">message</span> 要发送给骰娘的具体消息
 */</span>
<span class="token keyword">function</span> <span class="token function">chatWithBot</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>msg<span class="token punctuation">,</span>message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://api.brainshop.ai/get?bid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">BID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;key=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;uid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>userId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;msg=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">抱歉，我连接不上主脑了。它传递过来的信息是：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&quot;cnt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义-coc-规则" tabindex="-1"><a class="header-anchor" href="#自定义-coc-规则" aria-hidden="true">#</a> 自定义 COC 规则</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         示例：自定义 COC 规则</span>
<span class="token comment">// @author       木落</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  自设规则，出 1 大成功，出 100 大失败。困难极难等保持原样</span>
<span class="token comment">// @timestamp    1671886435</span>
<span class="token comment">// 2022-12-24</span>
<span class="token comment">// @license      Apache-2</span>
<span class="token comment">// @homepageURL  https://github.com/sealdice/javascript</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token keyword">const</span> rule <span class="token operator">=</span> seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">newRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rule<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 自定义序号必须大于等于 20，代表可用.setcoc 20 切换</span>
rule<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&#39;测试&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 代表可用 .setcoc 测试 切换</span>
rule<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;自设规则&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 已切换至规则文本 name: desc</span>
rule<span class="token punctuation">.</span>desc <span class="token operator">=</span> <span class="token string">&#39;出 1 大成功\\n出 100 大失败&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// d100 为出目，checkValue 为技能点数</span>
rule<span class="token punctuation">.</span><span class="token function-variable function">check</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> d100<span class="token punctuation">,</span> checkValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> successRank <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> criticalSuccessValue <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> fumbleValue <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>d100 <span class="token operator">&lt;=</span> checkValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    successRank <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    successRank <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 成功判定</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>successRank <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 区分大成功、困难成功、极难成功等</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>d100 <span class="token operator">&lt;=</span> checkValue <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//suffix = &quot;成功(困难)&quot;</span>
      successRank <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>d100 <span class="token operator">&lt;=</span> checkValue <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//suffix = &quot;成功(极难)&quot;</span>
      successRank <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>d100 <span class="token operator">&lt;=</span> criticalSuccessValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//suffix = &quot;大成功！&quot;</span>
      successRank <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>d100 <span class="token operator">&gt;=</span> fumbleValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//suffix = &quot;大失败！&quot;</span>
      successRank <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">newRuleCheckResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ret<span class="token punctuation">.</span>successRank <span class="token operator">=</span> successRank<span class="token punctuation">;</span>
  ret<span class="token punctuation">.</span>criticalSuccessValue <span class="token operator">=</span> criticalSuccessValue<span class="token punctuation">;</span>
  <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 注册规则</span>
seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">registerRule</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="补充-使用非指令关键词" tabindex="-1"><a class="header-anchor" href="#补充-使用非指令关键词" aria-hidden="true">#</a> 补充：使用非指令关键词</h2><blockquote><p>你是否因为自定义回复能实现的功能有限而烦恼？你是否因为自定义回复的匹配方式不全而愤怒？你是否因为自定义回复只能调用图片 api 而感到焦头烂额？</p><p>不要紧张，我的朋友，试试非指令关键词，这会非常有用。</p></blockquote><p>通常情况下，我们使用 <code>ext.onNotCommandReceived</code> 作为非指令关键词的标志；这限定了只有在未收到命令且未达成自定义回复时，海豹才会触发此流程。</p><p>一个完整的非指令关键词模板如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 必要流程，注册扩展，注意即使是非指令关键词也是依附于扩展的</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;x.x.x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 这里其实是编写处理函数</span>
    ext<span class="token punctuation">.</span><span class="token function-variable function">onNotCommandReceived</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> message <span class="token operator">=</span> msg<span class="token punctuation">.</span>message<span class="token punctuation">;</span>
        <span class="token comment">// 这里请自己处理要如何达成 message 的匹配条件，js 那么多的匹配方法，足够你玩出花来。</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token comment">// 匹配到关键词了，要干什么？</span>
          xxx<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),yn={id:"注册插件配置项",tabindex:"-1"},wn=n("a",{class:"header-anchor",href:"#注册插件配置项","aria-hidden":"true"},"#",-1),qn=p(`<p>插件若要在 UI 中注册可供用户修改的配置项，需要在插件注册后调用 <code>seal.ext.registerXXXConfig()</code> 函数注册配置项。</p><p><code>XXX</code> 为配置项的类型，目前支持 <code>string</code>、<code>int</code>、<code>float</code>、<code>bool</code>、<code>template</code>、<code>option</code> 六种类型。注意按照小驼峰命名法大写</p><p>同样的，插件也可以使用 <code>seal.ext.getXXXConfig()</code> 函数获取配置项的值。</p><p>你也可以直接使用 <code>seal.ext.getConfig()</code> 函数获取配置项的值，这个函数会返回一个 <code>ConfigItem</code> 对象， 包含了配置项的类型、值、默认值等信息。</p><p><code>ConfigItem</code> 对象的类型定义如下，调用时请使用 <code>jsbind</code> 中的值作为 <code>key</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> ConfigItem <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Key          <span class="token builtin">string</span>      <span class="token string">\`json:&quot;key&quot; jsbind:&quot;key&quot;\`</span>
	Type         <span class="token builtin">string</span>      <span class="token string">\`json:&quot;type&quot; jsbind:&quot;type&quot;\`</span>
	DefaultValue <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token string">\`json:&quot;defaultValue&quot; jsbind:&quot;defaultValue&quot;\`</span>
	Value        <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token string">\`json:&quot;value,omitempty&quot; jsbind:&quot;value&quot;\`</span>
	Option       <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token string">\`json:&quot;option,omitempty&quot; jsbind:&quot;option&quot;\`</span>
	Deprecated   <span class="token builtin">bool</span>        <span class="token string">\`json:&quot;deprecated,omitempty&quot; jsbind:&quot;deprecated&quot;\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">更原始的 API</p><p><code>seal.ext.registerConfig()</code> 函数也是可以使用的，你需要自己通过 <code>seal.ext.newConfigItem()</code> 来获取一个新的 <code>ConfigItem</code> 对象。</p><p>在对你的 <code>ConfigItem</code> 对象进行修改后，再调用 <code>seal.ext.registerConfig()</code> 函数进行注册。</p></div><h3 id="示例代码-注册配置项" tabindex="-1"><a class="header-anchor" href="#示例代码-注册配置项" aria-hidden="true">#</a> 示例代码：注册配置项</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ==UserScript==</span>
<span class="token comment">// @name         js-config-example</span>
<span class="token comment">// @author       Szzrain</span>
<span class="token comment">// @version      1.0.0</span>
<span class="token comment">// @description  演示 js 配置项的用法</span>
<span class="token comment">// @timestamp    1698636875</span>
<span class="token comment">// @license      MIT</span>
<span class="token comment">// ==/UserScript==</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;js-config-example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ext <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;js-config-example&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SzzRain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个命令</span>
    <span class="token keyword">const</span> cmdgetConfig <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cmdgetConfig<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;getconfig&#39;</span><span class="token punctuation">;</span>
    cmdgetConfig<span class="token punctuation">.</span>help <span class="token operator">=</span> <span class="token string">&#39;使用.getconfig &lt;key&gt; 来获取配置项，仅 master 可用&#39;</span><span class="token punctuation">;</span>
    cmdgetConfig<span class="token punctuation">.</span>allowDelegate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    cmdgetConfig<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> val <span class="token operator">=</span> cmdArgs<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;help&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> ret <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ret<span class="token punctuation">.</span>showHelp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>privilegeLevel <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> config <span class="token operator">=</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> config<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&quot;你没有权限执行此命令&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注册命令</span>
    ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;getconfig&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmdgetConfig<span class="token punctuation">;</span>

    <span class="token comment">// 注册扩展</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 注册配置项需在 ext 注册后进行</span>
    <span class="token comment">// 通常来说，register 函数的参数为 ext, key, defaultValue</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerStringConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span><span class="token string">&quot;testkey1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;testvalue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerIntConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span><span class="token string">&quot;testkey2&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerFloatConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span><span class="token string">&quot;testkey3&quot;</span><span class="token punctuation">,</span> <span class="token number">123.456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerBoolConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span><span class="token string">&quot;testkey4&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerTemplateConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span><span class="token string">&quot;testkey5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 注册单选项函数的参数为 ext, key, defaultValue, options</span>
    seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerOptionConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;testkey6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册后的配置项会在 UI 中显示，可以在 UI 中修改配置项的值</p><figure><img src="`+b+'" alt="JS 配置项" tabindex="0" loading="lazy"><figcaption>JS 配置项</figcaption></figure><h2 id="使用-ts-模板" tabindex="-1"><a class="header-anchor" href="#使用-ts-模板" aria-hidden="true">#</a> 使用 TS 模板</h2><h3 id="clone-或下载项目" tabindex="-1"><a class="header-anchor" href="#clone-或下载项目" aria-hidden="true">#</a> clone 或下载项目</h3><p>推荐的流程：</p>',14),Sn={href:"https://github.com/sealdice/sealdice-js-ext-template",target:"_blank",rel:"noopener noreferrer"},_n=n("li",null,[n("code",null,"git clone"),s(" 到本地，进行开发。")],-1),jn=n("p",null,"如果你没有 GitHub 账号，也不会用 git：",-1),An={href:"https://github.com/sealdice/sealdice-js-ext-template",target:"_blank",rel:"noopener noreferrer"},Cn=n("li",null,"解压后进行开发。",-1),Tn=n("h3",{id:"使用和编译",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用和编译","aria-hidden":"true"},"#"),s(" 使用和编译")],-1),En=n("p",null,"TS 插件代码需要编译为 js 文件才能被海豹核心加载。",-1),In=n("p",null,"开始使用模板工程时，需要先将所需依赖包安装好。在确认你所使用的包管理器后，在命令行使用如下命令：",-1),Rn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Nn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(),n("span",{class:"token function"},"install"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),$n=n("p",null,"当你写好了代码，需要将 ts 文件转换为 js 文件以便上传到海豹骰时，在命令行使用如下命令：",-1),Gn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(` run build
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Bn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(` run build
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Mn=p('<p>编译成功的 js 文件在 <code>dist</code> 目录下，默认的名字是 <code>sealdce-js-ext.js</code>。</p><h3 id="补全信息" tabindex="-1"><a class="header-anchor" href="#补全信息" aria-hidden="true">#</a> 补全信息</h3><p>当插件开发完成后（或者开始开发时），你还需要修改几处地方：</p><ul><li><code>header.txt</code>：这个文件是你插件的描述信息；</li><li><code>tools/build-config.js</code>：最开头一行 <code>var filename = &#39;sealdce-js-ext.js&#39;;</code> 改成你中意的名字，注意不要与现有的重名。</li></ul><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h3><p>只列出其中主要的一些文件</p><ul><li><code>src</code><ul><li><code>index.ts</code>：你的扩展的代码就写在这个文件里。</li></ul></li><li><code>tools</code><ul><li><code>build-config</code>：一些编译的配置，影响 <code>index.ts</code> 编译成 js 文件的方式；</li><li><code>build.js</code>：在命令 <code>npm run build</code> 执行时所运行的脚本，用于读取 <code>build-config</code> 并按照配置进行编译。</li></ul></li><li><code>types</code><ul><li><code>seal.d.ts</code>：类型文件，海豹核心提供的扩展 API。</li></ul></li><li><code>header.txt</code>：扩展头信息，会在编译时自动加到目标文件头部；</li><li><code>package.json</code>：命令 <code>npm install</code> 时就在安装这个文件里面所指示的依赖包；</li><li><code>tsconfig.json</code>：typescript 的配置。</li></ul><h2 id="js-扩展-api" tabindex="-1"><a class="header-anchor" href="#js-扩展-api" aria-hidden="true">#</a> JS 扩展 API</h2>',8),Xn={href:"https://github.com/sealdice/sealdice-core/blob/master/dice/dice_jsvm.go",target:"_blank",rel:"noopener noreferrer"},Pn=p(`<p>按类别整理。</p><blockquote><p>其中 ctx 为信息的 MsgContext，msg 为信息的 Message，一般会在定义指令函数时就声明，如：</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cmd<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    someFunction<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是 api 的说明（完全了吧......应该？）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//被注释掉的 api 是可以提供的，但是在源码中被注释。</span>
<span class="token comment">//seal.setVarInt(ctx, \`$XXX\`, valueToSet) //\`$XXX\`即 rollvm（初阶豹语）中的变量，其会将$XXX 的值设定为 int 类型的 valueToSet。</span>
<span class="token comment">//seal.setVarStr(ctx, \`$XXX\`, valueToSet) //同上，区别是设定的为 str 类型的 valueToSet。</span>
seal<span class="token punctuation">.</span><span class="token function">replyGroup</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> something<span class="token punctuation">)</span> <span class="token comment">//向收到指令的群中发送 something。</span>
seal<span class="token punctuation">.</span><span class="token function">replyPerson</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> something<span class="token punctuation">)</span> <span class="token comment">//顾名思义，类似暗骰，向指令触发者（若为好友）私信 something。</span>
seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> something<span class="token punctuation">)</span> <span class="token comment">//同上，区别是群内收到就群内发送，私聊收到就私聊发送。</span>
seal<span class="token punctuation">.</span><span class="token function">memberBan</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> groupID<span class="token punctuation">,</span> userID<span class="token punctuation">,</span> dur<span class="token punctuation">)</span> <span class="token comment">//将指定群的指定用户封禁指定时间 (似乎只实现了 walleq 协议？)</span>
seal<span class="token punctuation">.</span><span class="token function">memberKick</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> groupID<span class="token punctuation">,</span> userID<span class="token punctuation">)</span>  <span class="token comment">//将指定群的指定用户踢出 (似乎也只实现了 walleq 协议？)</span>
seal<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> something<span class="token punctuation">)</span> <span class="token comment">//将 something 经过一层 rollvm 转译并返回，注意需要配合 replyToSender 才能发送给触发者！</span>
seal<span class="token punctuation">.</span><span class="token function">formatTmpl</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> something<span class="token punctuation">)</span> <span class="token comment">//调用自定义文案 something</span>
seal<span class="token punctuation">.</span><span class="token function">getCtxProxyFirst</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cmdArgs<span class="token punctuation">)</span>  <span class="token comment">//获取被 at 的第一个人，等价于 getCtxProxyAtPos(ctx, 0)</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">intGet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$XXX</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">//返回一个数组，其为 \`[int 类型的触发者的该变量的值，bool]\` 当 strGet 一个 int 或 intGet 一个 str 时 bool 为 false，若一切正常则为 true。（之所以会有这么奇怪的说法是因为 rollvm 的「个人变量」机制）。</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">intSet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$XXX</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> valueToSet<span class="token punctuation">)</span> <span class="token comment">//\`$XXX\` 即 rollvm（初阶豹语）中的变量，其会将 $XXX 的值设定为 int 类型的 valueToSet。</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">strGet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$XXX</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">//返回一个数组，其为 \`[str 类型的触发者的该变量的值，bool]\`（之所以会有这么奇怪的说法是因为 rollvm 的「个人变量」机制），当 strGet 一个 int 或 intGet 一个 str 时 bool 为 false，如果一切正常则为 true。</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">strSet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$XXX</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> valueToSet<span class="token punctuation">)</span> <span class="token comment">//\`$XXX\` 即 rollvm（初阶豹语）中的变量，其会将 $XXX 的值设定为 str 类型的 valueToSet。</span>
<span class="token comment">//seal.vars.varSet(ctx, \`$XXX\`, valueToSet) //可能是根据数据类型自动推断 int 或 str？</span>
<span class="token comment">//seal.vars.varGet(ctx, \`$XXX\`) //同上</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdItemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//用来定义新的指令；没有参数，个人觉得可以视其为类（class）。</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newCmdExecuteResult</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span> <span class="token comment">//用于判断指令执行结果，true 为成功，false 为失败。</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span>extName<span class="token punctuation">,</span> extAuthor<span class="token punctuation">,</span> Version<span class="token punctuation">)</span> <span class="token comment">//用于建立一个名为 extName，作者为 extAuthor，版本为 Version 的扩展。注意，extName，extAuthor 和 Version 均为字符串。</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>extName<span class="token punctuation">)</span> <span class="token comment">//用于查找名为 extname 的扩展，若存在则返回 true，否则返回 false。</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>newExt<span class="token punctuation">)</span> <span class="token comment">//将扩展 newExt 注册到系统中。注意 newExt 是 seal.ext.new 的返回值，将 register 视为 seal.ext.new() 是错误的。</span>
seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">newRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//用来创建自定义 coc 规则，github.com/sealdice/javascript/examples 中已有详细例子，不多赘述。</span>
seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">newRuleCheckResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//同上，不多赘述。</span>
seal<span class="token punctuation">.</span>coc<span class="token punctuation">.</span><span class="token function">registerRule</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span> <span class="token comment">//同上，不多赘述。</span>
seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> deckname<span class="token punctuation">,</span> isShuffle<span class="token punctuation">)</span> <span class="token comment">//他会返回一个抽取牌堆的结果。这里有些复杂：deckname 为需要抽取的牌堆名，而 isShuffle 则是一个布尔值，它决定是否放回抽取；false 为放回，true 为不放回。</span>
seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//重新加载牌堆。</span>
<span class="token comment">//下面是 1.2 新增 api</span>
seal<span class="token punctuation">.</span><span class="token function">newMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回一个空白的 Message 对象，结构与收到消息的 msg 相同</span>
seal<span class="token punctuation">.</span><span class="token function">createTempCtx</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token comment">// 制作一个 ctx, 需要 msg.MessageType 和 msg.Sender.UserId</span>
seal<span class="token punctuation">.</span><span class="token function">applyPlayerGroupCardByTemplate</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> tmpl<span class="token punctuation">)</span> <span class="token comment">// 设定当前 ctx 玩家的自动名片格式</span>
seal<span class="token punctuation">.</span>gameSystem<span class="token punctuation">.</span><span class="token function">newTemplate</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//从 json 解析新的游戏规则。</span>
seal<span class="token punctuation">.</span>gameSystem<span class="token punctuation">.</span><span class="token function">newTemplateByYaml</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//从 yaml 解析新的游戏规则。</span>
seal<span class="token punctuation">.</span><span class="token function">getCtxProxyAtPos</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> pos<span class="token punctuation">)</span> <span class="token comment">//获取第 pos 个被 at 的人，pos 从 0 开始计数</span>
seal<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>base64String<span class="token punctuation">)</span> <span class="token comment">//返回被解码的 base64 编码</span>
seal<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//将 string 编码为 base64 并返回</span>

<span class="token comment">//下面是 1.4.1 新增 api</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">newConfigItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//用于创建一个新的配置项，返回一个 ConfigItem 对象</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerConfig</span><span class="token punctuation">(</span>configItem<span class="token punctuation">)</span> <span class="token comment">//用于注册一个配置项，参数为 ConfigItem 对象</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerStringConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;defaultValue&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 string 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerIntConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 int 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerFloatConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token number">123.456</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 float 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerBoolConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 bool 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerTemplateConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 template 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">registerOptionConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//用于注册一个 option 类型的配置项，参数为扩展对象、配置项的 key、默认值和可选项</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getStringConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 string 类型配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getIntConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 int 类型配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getFloatConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 float 类型配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getBoolConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 bool 类型配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getTemplateConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 template 类型配置项的值，参数为扩展对象和配置项的 key</span>
seal<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">getOptionConfig</span><span class="token punctuation">(</span>ext<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//用于获取一个 option 类型配置项的值，参数为扩展对象和配置项的 key</span>

<span class="token comment">//下面是 1.4.4 新增 api</span>
<span class="token function">setPlayerGroupCard</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> tmpl<span class="token punctuation">)</span> <span class="token comment">//设置当前 ctx 玩家的名片</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Dn=p(`<h3 id="部分-api-使用示例" tabindex="-1"><a class="header-anchor" href="#部分-api-使用示例" aria-hidden="true">#</a> 部分 api 使用示例</h3><div class="hint-container note"><p class="hint-container-title">注</p><p>声明和注册扩展的代码部分已省略。</p></div><h4 id="replygroup-replyperson-replytosender" tabindex="-1"><a class="header-anchor" href="#replygroup-replyperson-replytosender" aria-hidden="true">#</a> <code>replyGroup</code> <code>replyPerson</code> <code>replyToSender</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//在私聊触发 replyGroup 不会回复</span>
seal<span class="token punctuation">.</span><span class="token function">replyGroup</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&#39;something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触发者会收到&quot;something&quot;的回复</span>
seal<span class="token punctuation">.</span><span class="token function">replyPerson</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&#39;something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触发者会收到&quot;something&quot;的私聊回复</span>
seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> <span class="token string">&#39;something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触发者会收到&quot;something&quot;的回复</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="memberban-memberkick" tabindex="-1"><a class="header-anchor" href="#memberban-memberkick" aria-hidden="true">#</a> <code>memberBan</code> <code>memberKick</code></h4><blockquote><p>是否保留待议</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//注意这些似乎只能在 WQ 协议上实现;</span>
seal<span class="token punctuation">.</span><span class="token function">memberBan</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> groupID<span class="token punctuation">,</span> userID<span class="token punctuation">,</span> dur<span class="token punctuation">)</span> <span class="token comment">//将群为 groupID，userid 为 userID 的人封禁 dur（单位未知）</span>
seal<span class="token punctuation">.</span><span class="token function">memberKick</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> groupID<span class="token punctuation">,</span> userID<span class="token punctuation">)</span> <span class="token comment">//将群为 groupID，userid 为 userID 的人踢出那个群</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="format-formattmpl" tabindex="-1"><a class="header-anchor" href="#format-formattmpl" aria-hidden="true">#</a> <code>format</code> <code>formatTmpl</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//注意 format 不会自动 reply，而是 return，所以请套一层 reply</span>
seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> seal<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{$t玩家}的人品为：{$t人品}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//{$t人品} 是一个 rollvm 变量，其值等于 .jrrp 出的数值</span>
<span class="token comment">//回复：</span>
<span class="token comment">//群主的人品为：87</span>
seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> seal<span class="token punctuation">.</span><span class="token function">formatTmpl</span><span class="token punctuation">(</span>unknown<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//这里等大佬来了再研究</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getctxproxyfirst-getctxproxyatpos" tabindex="-1"><a class="header-anchor" href="#getctxproxyfirst-getctxproxyatpos" aria-hidden="true">#</a> <code>getCtxProxyFirst</code> <code>getCtxProxyAtPos</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cmd<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ctxFirst <span class="token operator">=</span> seal<span class="token punctuation">.</span><span class="token function">getCtxProxyFirst</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cmdArgs<span class="token punctuation">)</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ctxFirst<span class="token punctuation">.</span>player<span class="token punctuation">,</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmd
<span class="token comment">//输入：.test @A @B</span>
<span class="token comment">//返回：A 的名称。这里其实获取的是 A 玩家的 ctx，具体见 ctx 数据结构。</span>
cmd<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> cmdArgs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ctx3 <span class="token operator">=</span> seal<span class="token punctuation">.</span><span class="token function">getCtxProxyAtPos</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    seal<span class="token punctuation">.</span><span class="token function">replyToSender</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> ctx3<span class="token punctuation">.</span>player<span class="token punctuation">,</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
ext<span class="token punctuation">.</span>cmdMap<span class="token punctuation">[</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cmd
<span class="token comment">//输入：.test @A @B @C</span>
<span class="token comment">//返回：C（第三个被@的人）的名称。这里其实获取的是 C 玩家的 ctx，具体见 ctx 数据结构。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="vars" tabindex="-1"><a class="header-anchor" href="#vars" aria-hidden="true">#</a> <code>vars</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 要看懂这里你可能需要学习一下初阶豹语</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">intSet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$m今日打卡次数</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">//将触发者的该个人变量设置为 8</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">intGet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$m今日打卡次数</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">//返回 [8,true]</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">strSet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$g群友经典语录</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">我要 Git Blame 一下看看是谁写的</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">//将群内的该群组变量设置为“我要 Git Blame 一下看看是谁写的”</span>
seal<span class="token punctuation">.</span>vars<span class="token punctuation">.</span><span class="token function">strGet</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$g群友经典语录</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">//返回 [&quot;我要 Git Blame 一下看看是谁写的&quot;,true]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ext" tabindex="-1"><a class="header-anchor" href="#ext" aria-hidden="true">#</a> <code>ext</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//用于注册扩展和定义指令的 api，已有详细示例，不多赘述</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="coc" tabindex="-1"><a class="header-anchor" href="#coc" aria-hidden="true">#</a> <code>coc</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//用于创建 coc 村规的 api，已有详细示例，不多赘述</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="deck" tabindex="-1"><a class="header-anchor" href="#deck" aria-hidden="true">#</a> <code>deck</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">煤气灯</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">//返回 放回抽取牌堆“煤气灯”的结果</span>
seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">煤气灯</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//返回 不放回抽取牌堆“煤气灯”的结果</span>
seal<span class="token punctuation">.</span>deck<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//重新加载牌堆</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义-trpg-规则相关" tabindex="-1"><a class="header-anchor" href="#自定义-trpg-规则相关" aria-hidden="true">#</a> 自定义 TRPG 规则相关</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//这里实在不知道如何举例了</span>
seal<span class="token punctuation">.</span>gameSystem<span class="token punctuation">.</span><span class="token function">newTemplate</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//从 json 解析新的游戏规则。</span>
seal<span class="token punctuation">.</span>gameSystem<span class="token punctuation">.</span><span class="token function">newTemplateByYaml</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//从 yaml 解析新的游戏规则。</span>
seal<span class="token punctuation">.</span><span class="token function">applyPlayerGroupCardByTemplate</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> tmpl<span class="token punctuation">)</span> <span class="token comment">// 设定当前 ctx 玩家的自动名片格式</span>
<span class="token function">setPlayerGroupCard</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> tmpl<span class="token punctuation">)</span> <span class="token comment">// 立刻设定当前 ctx 玩家的名片格式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>seal<span class="token punctuation">.</span><span class="token function">newMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回一个空白的 Message 对象，结构与收到消息的 msg 相同</span>
seal<span class="token punctuation">.</span><span class="token function">createTempCtx</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token comment">// 制作一个 ctx, 需要 msg.MessageType 和 msg.Sender.UserId</span>
seal<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>base64String<span class="token punctuation">)</span> <span class="token comment">//返回被解码的 base64 编码</span>
seal<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">//将 string 编码为 base64 并返回</span>
seal<span class="token punctuation">.</span><span class="token function">getEndPoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回骰子（应该？）的 EndPoints</span>
seal<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回一个 map，键值为 version 和 versionCode</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ctx-的内容" tabindex="-1"><a class="header-anchor" href="#ctx-的内容" aria-hidden="true">#</a> <code>ctx</code> 的内容</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//在 github.com/sealdice/javascript/examples_ts/seal.d.ts 中有完整内容</span>
<span class="token comment">// 成员</span>
ctx<span class="token punctuation">.</span>group <span class="token comment">// 当前群信息 (对象)</span>
ctx<span class="token punctuation">.</span>player <span class="token comment">// 当前玩家数据 (对象)</span>
ctx<span class="token punctuation">.</span>endPoint <span class="token comment">// 接入点数据 (对象)</span>
<span class="token comment">// 以上三个对象内容暂略</span>
ctx<span class="token punctuation">.</span>isCurGroupBotOn <span class="token comment">// bool</span>
ctx<span class="token punctuation">.</span>isPrivate <span class="token comment">// bool 是否私聊</span>
ctx<span class="token punctuation">.</span>privilegeLevel <span class="token comment">// int 权限等级：40 邀请者、50 管理、60 群主、70 信任、100 master</span>
ctx<span class="token punctuation">.</span>delegateText <span class="token comment">// string 代骰附加文本</span>
<span class="token comment">// 方法 (太长，懒.)</span>
chBindCur
chBindCurGet
chBindGet
chBindGetList
chExists
chGet
chLoad
chNew
chUnbind
chUnbindCur
chVarsClear
chVarsGet
chVarsNumGet
chVarsUpdateTime
loadGroupVars
loadPlayerGlobalVars
loadPlayerGroupVars<span class="token punctuation">,</span>notice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ctx-group-的内容" tabindex="-1"><a class="header-anchor" href="#ctx-group-的内容" aria-hidden="true">#</a> <code>ctx.group</code> 的内容</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 成员</span>
active
groupId
guildId
groupName
cocRuleIndex
logCurName
logOn
recentDiceSendTime
showGroupWelcome
groupWelcomeMessage
enteredTime
inviteUserId
<span class="token comment">// 方法</span>
extActive
extClear
extGetActive
extInactive
extInactiveByName
getCharTemplate
isActive
playerGet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ctx-player-的内容" tabindex="-1"><a class="header-anchor" href="#ctx-player-的内容" aria-hidden="true">#</a> <code>ctx.player</code> 的内容</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 成员</span>
name
userId
lastCommandTime
autoSetNameTemplate
<span class="token comment">// 方法</span>
getValueNameByAlias
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ctx-endpoint-的内容" tabindex="-1"><a class="header-anchor" href="#ctx-endpoint-的内容" aria-hidden="true">#</a> <code>ctx.endPoint</code> 的内容</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 成员</span>
baseInfo
id
nickname
state
userId
groupNum
cmdExecutedNum
cmdExecutedLastTime
onlineTotalTime
platform
enable
<span class="token comment">// 方法</span>
adapterSetup
refreshGroupNum
setEnable
unmarshalYAML
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="msg-的内容" tabindex="-1"><a class="header-anchor" href="#msg-的内容" aria-hidden="true">#</a> <code>msg</code> 的内容</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 成员</span>
msg<span class="token punctuation">.</span>time <span class="token comment">// int64 发送时间</span>
msg<span class="token punctuation">.</span>messageType <span class="token comment">// string group 群聊 private 私聊</span>
msg<span class="token punctuation">.</span>groupId <span class="token comment">// string 如果是群聊，群号</span>
msg<span class="token punctuation">.</span>guildId <span class="token comment">// string 服务器群组号，会在 discord,kook,dodo 等平台见到</span>
msg<span class="token punctuation">.</span>sender <span class="token comment">// 发送者信息 (对象)</span>
    sender<span class="token punctuation">.</span>nickname
    sender<span class="token punctuation">.</span>userId
msg<span class="token punctuation">.</span>message
msg<span class="token punctuation">.</span>rawId <span class="token comment">// 原始信息 ID, 用于撤回等</span>
msg<span class="token punctuation">.</span>platform <span class="token comment">// 平台</span>
<span class="token comment">// 方法</span>
<span class="token comment">// (似乎目前没有？)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cmdargs-的内容" tabindex="-1"><a class="header-anchor" href="#cmdargs-的内容" aria-hidden="true">#</a> <code>cmdArgs</code> 的内容</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 成员</span>
<span class="token punctuation">.</span>command <span class="token comment">// string</span>
<span class="token punctuation">.</span>args <span class="token comment">// []string</span>
<span class="token punctuation">.</span>kwargs <span class="token comment">// []Kwarg</span>
<span class="token punctuation">.</span>at <span class="token comment">// []AtInfo</span>
<span class="token punctuation">.</span>rawArgs <span class="token comment">// string</span>
<span class="token punctuation">.</span>amIBeMentioned <span class="token comment">// bool (为何要加一个 Be?)</span>
<span class="token punctuation">.</span>cleanArgs <span class="token comment">// string 一种格式化后的参数，也就是中间所有分隔符都用一个空格替代</span>
<span class="token punctuation">.</span>specialExecuteTimes <span class="token comment">// 特殊的执行次数，对应 3# 这种</span>
<span class="token comment">// 方法</span>
<span class="token punctuation">.</span><span class="token function">isArgEqual</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> ss<span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// 返回 bool, 检查第 n 个参数是否在 ss 中</span>
<span class="token punctuation">.</span><span class="token function">eatPrefixWith</span><span class="token punctuation">(</span>ss<span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// 似乎是从 cleanArgs 中去除 ss 中第一个匹配的前缀</span>
<span class="token punctuation">.</span><span class="token function">chopPrefixToArgsWith</span><span class="token punctuation">(</span>ss<span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// 不懂</span>
<span class="token punctuation">.</span><span class="token function">getArgN</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">// -&gt; string</span>
<span class="token punctuation">.</span><span class="token function">getKwarg</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// -&gt; Kwarg 如果有名为 str 的 flag，返回对象，否则返回 null/undefined(不确定)</span>
<span class="token punctuation">.</span><span class="token function">getRestArgsFrom</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">// -&gt; string 获取从第 n 个参数之后的所有参数，用空格拼接成一个字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35);function Un(On,Jn){const t=l("ExternalLinkIcon"),u=l("RouterLink"),k=l("Badge"),r=l("Tabs");return m(),v("div",null,[h,n("div",f,[x,y,w,n("ul",null,[n("li",null,[n("a",q,[s("现代 JavaScript 教程"),a(t)])]),n("li",null,[n("a",S,[s("JavaScript 教程 - 廖雪峰"),a(t)])]),n("li",null,[n("a",_,[s("JavaScript - 菜鸟教程"),a(t)])])])]),j,n("p",null,[s("VS Code 可以安装 "),n("a",A,[s("SealDice Snippets"),a(t)]),s(" 插件，提供了一些常见代码片段，帮助快速生成模板代码。")]),n("p",null,[s("如果你打算使用 TypeScript，海豹提供了相应的 "),n("a",C,[s("模板工程"),a(t)]),s("，注册扩展和指令的代码已经写好，可以直接编译出一个可直接装载的 JS 扩展文件。使用见 "),T,s("。")]),i(" - 扩展编写示例：https://github.com/sealdice/javascript/tree/main/examples "),E,n("div",I,[R,n("p",null,[s("海豹使用 "),n("a",N,[s("goja"),a(t)]),s(" 作为 js 脚本引擎。goja 目前支持了 ES6 基本上全部的特性，包括 "),$,s("，"),G,s(" 和 "),B,s("。")]),M]),X,n("table",null,[P,n("tbody",null,[D,U,n("tr",null,[O,n("td",null,[s("版本号，可以自己定义，但建议遵循 "),n("a",J,[s("语义版本控制（Semantic Versioning）"),a(t)])])]),L,V,H,z])]),F,n("div",K,[Y,W,n("p",null,[s("可以查看 "),a(u,{to:"/use/core.html#ext-%E6%89%A9%E5%B1%95%E7%AE%A1%E7%90%86"},{default:e(()=>[s(".ext 命令")]),_:1}),s(" 来了解更多。")])]),Q,i(" TODO: 添加 1.4.1 新增的 插件配置项 相关说明 "),Z,n("p",null,[s("这里仅说明需要用到的接口，详细可见 "),n("a",nn,[s("插件仓库"),a(t)]),s(),sn,s(" 下的 "),an,s(" 文件，里面包含了目前开放的接口的定义及其注释说明。")]),tn,n("p",null,[s("发送的文本中，可以包含 "),a(u,{to:"/advanced/script.html#%E5%8F%98%E9%87%8F"},{default:e(()=>[s("变量")]),_:1}),s("（例如"),pn,s("），也可以包含 "),n("a",en,[s("CQ 码"),a(t)]),s("，用来实现回复发送者、@发送者、发送图片、发送分享卡片等功能。")]),on,n("h2",cn,[ln,s(" 黑名单 / 信任名单操作 "),a(k,{type:"tip",text:"v1.4.4",vertical:"middle"})]),un,n("p",null,[s("答案是使用 "),kn,s(" 函数将存储了数据的 JS 对象转换为 "),n("a",rn,[s("JSON"),a(t)]),s(" 字符串，存储起来，需要取出的时候，再使用 "),dn,s(" 函数将数据再转换为 JS 对象。。")]),mn,n("p",null,[s("主要使用 "),n("a",vn,[s("Fetch API"),a(t)]),s(" 进行网络请求，详细文档见链接。")]),bn,n("p",null,[s("比如核心代码只有一行的「"),n("a",gn,[s("随机猫猫图片"),a(t)]),s("」扩展：")]),hn,n("p",null,[s("当然，也有稍微复杂的，比如「"),n("a",fn,[s("AI 骰娘"),a(t)]),s("」扩展，但也没有太复杂，只是处理了一下发送者传过来的消息，再发送给网络 API，收到响应之后再回应发送者。")]),xn,n("h2",yn,[wn,s(" 注册插件配置项 "),a(k,{type:"tip",text:"v1.4.1",vertical:"middle"})]),qn,n("ol",null,[n("li",null,[s("在 "),n("a",Sn,[s("模板项目仓库"),a(t)]),s(" 点击 Use this template 按钮，使用该模板在自己的 GitHub 上创建一个扩展的仓库，并设置为自己的扩展的名字；")]),_n]),jn,n("ol",null,[n("li",null,[s("在 "),n("a",An,[s("模板项目仓库"),a(t)]),s(" 点击 Code 按钮，在出现的浮窗中选择 Download ZIP，这样就会下载一个压缩包；")]),Cn]),Tn,En,In,a(r,{id:"760",data:[{id:"npm"},{id:"pnpm"}],"tab-id":"npm"},{title0:e(({value:o,isActive:c})=>[s("npm")]),title1:e(({value:o,isActive:c})=>[s("pnpm")]),tab0:e(({value:o,isActive:c})=>[Rn]),tab1:e(({value:o,isActive:c})=>[Nn]),_:1}),$n,a(r,{id:"771",data:[{id:"npm"},{id:"pnpm"}],"tab-id":"npm"},{title0:e(({value:o,isActive:c})=>[s("npm")]),title1:e(({value:o,isActive:c})=>[s("pnpm")]),tab0:e(({value:o,isActive:c})=>[Gn]),tab1:e(({value:o,isActive:c})=>[Bn]),_:1}),Mn,n("blockquote",null,[n("p",null,[s("这里只是粗略的整理，具体请看 "),n("a",Xn,[s("jsvm 源码"),a(t)]),s("。")])]),Pn,i(" TODO: 添加 1.4.1 中新增的插件配置项 "),Dn])}const Hn=d(g,[["render",Un],["__file","edit_jsscript.html.vue"]]);export{Hn as default};
